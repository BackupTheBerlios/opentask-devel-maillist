From j_a_r at mail.berlios.de  Thu Jan 31 10:48:25 2008
From: j_a_r at mail.berlios.de (j_a_r at BerliOS)
Date: Thu, 31 Jan 2008 10:48:25 +0100
Subject: [Opentask-devel] r25 - in trunk: . src/opentask src/opentask/data
Message-ID: <200801310948.m0V9mPBh019408@sheep.berlios.de>

Author: j_a_r
Date: 2008-01-31 10:48:25 +0100 (Thu, 31 Jan 2008)
New Revision: 25

Modified:
   trunk/changelog.txt
   trunk/src/opentask/OpenTask.java
   trunk/src/opentask/data/ItemListModelComparator.java
Log:
fixed bug in sorting order

Modified: trunk/changelog.txt
===================================================================
--- trunk/changelog.txt	2008-01-30 17:06:32 UTC (rev 24)
+++ trunk/changelog.txt	2008-01-31 09:48:25 UTC (rev 25)
@@ -1,6 +1,7 @@
 0.1.3
 =====
 * fixed bug in notification / deletion of elapsed but un-notified tasks
+* fixed bug in sorting order
 
 0.1.2
 =====

Modified: trunk/src/opentask/OpenTask.java
===================================================================
--- trunk/src/opentask/OpenTask.java	2008-01-30 17:06:32 UTC (rev 24)
+++ trunk/src/opentask/OpenTask.java	2008-01-31 09:48:25 UTC (rev 25)
@@ -128,7 +128,7 @@
 		mainPanel.setBorder(BorderFactory.createEmptyBorder(5,5,5,5));
 		
 		table = new JTable(model);
-		table.setAutoResizeMode(JTable.AUTO_RESIZE_ALL_COLUMNS);
+//		table.setAutoResizeMode(JTable.AUTO_RESIZE_ALL_COLUMNS);
 		table.setRowHeight(23);
 		JScrollPane scrollPane = new JScrollPane(table);
 		table.setFillsViewportHeight(true);
@@ -383,4 +383,4 @@
 			}
 		}
 	}
-}
\ No newline at end of file
+}

Modified: trunk/src/opentask/data/ItemListModelComparator.java
===================================================================
--- trunk/src/opentask/data/ItemListModelComparator.java	2008-01-30 17:06:32 UTC (rev 24)
+++ trunk/src/opentask/data/ItemListModelComparator.java	2008-01-31 09:48:25 UTC (rev 25)
@@ -44,7 +44,9 @@
 		// Task date
 		for (int i = 0; i < 3; ++i) {
 			date1[i] = token1.nextToken();
+			if (date1[i].length() == 1) date1[i] = "0" + date1[i];
 			date2[i] = token2.nextToken();
+			if (date2[i].length() == 1) date2[i] = "0" + date2[i];
 		}
 		comp = date1[2].compareTo(date2[2]);
 		if (comp != 0) return comp;
@@ -74,7 +76,9 @@
 		date2 = new String[3];
 		for (int i = 0; i < 3; ++i) {
 			date1[i] = token1.nextToken();
+			if (date1[i].length() == 1) date1[i] = "0" + date1[i];
 			date2[i] = token2.nextToken();
+			if (date2[i].length() == 1) date2[i] = "0" + date2[i];
 		}
 		comp = date1[2].compareTo(date2[2]);
 		if (comp != 0) return comp;



From j_a_r at mail.berlios.de  Thu Jan 31 11:16:07 2008
From: j_a_r at mail.berlios.de (j_a_r at BerliOS)
Date: Thu, 31 Jan 2008 11:16:07 +0100
Subject: [Opentask-devel] r26 - in trunk: . src/opentask src/opentask/data
Message-ID: <200801311016.m0VAG7Sq022589@sheep.berlios.de>

Author: j_a_r
Date: 2008-01-31 11:16:07 +0100 (Thu, 31 Jan 2008)
New Revision: 26

Added:
   trunk/src/opentask/data/TableColumnPacker.java
Modified:
   trunk/changelog.txt
   trunk/src/opentask/OpenTask.java
Log:
implemented table column width calculation

Modified: trunk/changelog.txt
===================================================================
--- trunk/changelog.txt	2008-01-31 09:48:25 UTC (rev 25)
+++ trunk/changelog.txt	2008-01-31 10:16:07 UTC (rev 26)
@@ -1,5 +1,6 @@
 0.1.3
 =====
+* implemented table column width calculation
 * fixed bug in notification / deletion of elapsed but un-notified tasks
 * fixed bug in sorting order
 

Modified: trunk/src/opentask/OpenTask.java
===================================================================
--- trunk/src/opentask/OpenTask.java	2008-01-31 09:48:25 UTC (rev 25)
+++ trunk/src/opentask/OpenTask.java	2008-01-31 10:16:07 UTC (rev 26)
@@ -101,7 +101,7 @@
         menu = new JMenu("Task");
 		menuItem = new JMenuItem("New", KeyEvent.VK_N);
         menuItem.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_N, ActionEvent.CTRL_MASK));
-        menuItem.addActionListener(new ItemDialogAction(null, "New Task", itemList));
+        menuItem.addActionListener(new ItemDialogAction(null, "New Task", table, itemList));
         menu.add(menuItem);
 		menuItem = new JMenuItem("Edit", KeyEvent.VK_E);
 		menuItem.addActionListener(new ItemEditAction(null, "Edit Task", table, itemList));
@@ -132,6 +132,9 @@
 		table.setRowHeight(23);
 		JScrollPane scrollPane = new JScrollPane(table);
 		table.setFillsViewportHeight(true);
+		TableColumnPacker cPacker = new TableColumnPacker(table);
+		cPacker.packColumns();
+
 		mainPanel.setLayout(new BorderLayout());
 		mainPanel.add(scrollPane);
 	}
@@ -215,15 +218,18 @@
 	String title;
 	ActionItem item;
 	ItemList itmList;
+	JTable table;
+	
 	/**
 	 * @param window
 	 * @param title
 	 * @param list
 	 */
-	public ItemDialogAction(JFrame window, String title, ItemList list) {
+	public ItemDialogAction(JFrame window, String title, JTable table, ItemList list) {
 		this.window = window;
 		this.title = title;
 		this.itmList = list;
+		this.table = table;
 	}
 	/**
 	 * @param window
@@ -231,11 +237,12 @@
 	 * @param item
 	 * @param list
 	 */
-	public ItemDialogAction(JFrame window, String title, ActionItem item, ItemList list) {
+	public ItemDialogAction(JFrame window, String title, JTable table, ActionItem item, ItemList list) {
 		this.window = window;
 		this.title = title;
 		this.item = item;
 		this.itmList = list;
+		this.table = table;
 	}
 	/* (non-Javadoc)
 	 * @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
@@ -247,6 +254,8 @@
 		ActionItem itm = dialog.getData();
 		if (itm != null) 
 			itmList.add(itm);
+		TableColumnPacker cPacker = new TableColumnPacker(table);
+		cPacker.packColumns();
 	}
 }
 
@@ -289,6 +298,8 @@
 			}
 			list.remove(item);
 		}
+		TableColumnPacker cPacker = new TableColumnPacker(table);
+		cPacker.packColumns();
 	}
 	
 }
@@ -333,6 +344,8 @@
 					list.add(item);
 			}
 		}
+		TableColumnPacker cPacker = new TableColumnPacker(table);
+		cPacker.packColumns();
 	}
 	
 }

Added: trunk/src/opentask/data/TableColumnPacker.java
===================================================================
--- trunk/src/opentask/data/TableColumnPacker.java	2008-01-31 09:48:25 UTC (rev 25)
+++ trunk/src/opentask/data/TableColumnPacker.java	2008-01-31 10:16:07 UTC (rev 26)
@@ -0,0 +1,63 @@
+/**
+ * 
+ */
+package opentask.data;
+
+import javax.swing.*;
+import javax.swing.table.*;
+import java.awt.Component;
+
+/**
+ * @author rassler
+ *
+ */
+public class TableColumnPacker {
+
+	private JTable table;
+	
+	public TableColumnPacker(JTable table)
+	{
+		this.table = table;
+	}
+	
+	public void packColumns()
+	{
+	    for (int c = 0; c < table.getColumnCount(); ++c) 
+	        packColumn(c, 2);
+	}
+	
+	private void packColumn(int vColIndex, int margin)
+	{
+//	    TableModel model = table.getModel();
+	    DefaultTableColumnModel colModel = (DefaultTableColumnModel)table.getColumnModel();
+	    TableColumn col = colModel.getColumn(vColIndex);
+	    int width = 0;
+
+	    // Get width of column header
+	    TableCellRenderer renderer = col.getHeaderRenderer();
+	    if (renderer == null) {
+	        renderer = table.getTableHeader().getDefaultRenderer();
+	    }
+	    Component comp = renderer.getTableCellRendererComponent(
+	        table, col.getHeaderValue(), false, false, 0, 0);
+	    width = comp.getPreferredSize().width;
+
+	    // Get maximum width of column data
+	    for (int r = 0; r < table.getRowCount(); ++r) 
+	    {
+	        renderer = table.getCellRenderer(r, vColIndex);
+	        comp = renderer.getTableCellRendererComponent(
+	            table, table.getValueAt(r, vColIndex), false, false, r, vColIndex);
+	        width = Math.max(width, comp.getPreferredSize().width);
+	    }
+
+	    // Add margin
+	    width += 2*margin;
+
+	    // Set the width
+	    col.setPreferredWidth(width);
+		
+	}
+}
+
+


Property changes on: trunk/src/opentask/data/TableColumnPacker.java
___________________________________________________________________
Name: svn:eol-style
   + native



From j_a_r at mail.berlios.de  Thu Jan 31 12:01:44 2008
From: j_a_r at mail.berlios.de (j_a_r at BerliOS)
Date: Thu, 31 Jan 2008 12:01:44 +0100
Subject: [Opentask-devel] r27 - in trunk: . src/opentask
Message-ID: <200801311101.m0VB1isk026639@sheep.berlios.de>

Author: j_a_r
Date: 2008-01-31 12:01:43 +0100 (Thu, 31 Jan 2008)
New Revision: 27

Modified:
   trunk/changelog.txt
   trunk/src/opentask/OpenTask.java
Log:
added periodically autosave function

Modified: trunk/changelog.txt
===================================================================
--- trunk/changelog.txt	2008-01-31 10:16:07 UTC (rev 26)
+++ trunk/changelog.txt	2008-01-31 11:01:43 UTC (rev 27)
@@ -1,6 +1,7 @@
 0.1.3
 =====
 * implemented table column width calculation
+* added periodically autosave function
 * fixed bug in notification / deletion of elapsed but un-notified tasks
 * fixed bug in sorting order
 

Modified: trunk/src/opentask/OpenTask.java
===================================================================
--- trunk/src/opentask/OpenTask.java	2008-01-31 10:16:07 UTC (rev 26)
+++ trunk/src/opentask/OpenTask.java	2008-01-31 11:01:43 UTC (rev 27)
@@ -40,7 +40,7 @@
 	public JPanel mainPanel;
 	JMenuBar menuBar;
 	JTable table;
-	Timer timer;
+	Timer notifyTimer, autoRepeatTimer;
 	
 	// important Data 
 	private boolean dirty;
@@ -49,6 +49,7 @@
 	
 	// constants
 	private final int DELAY = 1000;	// milliseconds
+	private final int AUTO_REPEAT_DELAY = DELAY * 60 * 5;	// currently 5 minutes
 
 	/**
 	 * 
@@ -58,9 +59,14 @@
 		itemList = new ItemList(model);	
 		if (!itemList.load())
 			JOptionPane.showMessageDialog(mainPanel, "Error: Reading data from disk was not successful!", "Disk Error", JOptionPane.ERROR_MESSAGE);
-		TimerAction timerListener = new TimerAction(this, itemList);
-		timer = new Timer(DELAY, timerListener);
-		timer.start();
+
+		TimerNotifyAction timerNotifyListener = new TimerNotifyAction(this, itemList);
+		notifyTimer = new Timer(DELAY, timerNotifyListener);
+		notifyTimer.start();
+
+		TimerAutoRepeatAction timerAutoRepeatListener = new TimerAutoRepeatAction(this);
+		autoRepeatTimer = new Timer(AUTO_REPEAT_DELAY, timerAutoRepeatListener);
+		autoRepeatTimer.start();
 	}
 	
 	/**
@@ -355,14 +361,14 @@
  * @author rassler
  *
  */
-class TimerAction implements ActionListener {
+class TimerNotifyAction implements ActionListener {
 	private OpenTask app;
 	private ItemList list;
 	/**
 	 * @param app
 	 * @param list
 	 */
-	public TimerAction(Object app, ItemList list) {
+	public TimerNotifyAction(Object app, ItemList list) {
 		this.app = (OpenTask)app;
 		this.list = list;
 	}
@@ -397,3 +403,23 @@
 		}
 	}
 }
+
+/**
+ * @author rassler
+ *
+ */
+class TimerAutoRepeatAction implements ActionListener {
+	private OpenTask app;
+	
+	public TimerAutoRepeatAction(Object app) {
+		this.app = (OpenTask)app;
+	}
+
+	/* (non-Javadoc)
+	 * @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
+	 */
+	public void actionPerformed(ActionEvent e) {
+		app.saveData();
+	}
+	
+}
\ No newline at end of file



